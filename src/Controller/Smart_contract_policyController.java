//Generated by 24HRS
package Controller;

import Model.Smart_contract_policy;
import DataBaseConnector.Connector;
import Model.Dlp_policy;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

public class Smart_contract_policyController {

    Connector con = Connector.getInstance();

    private Smart_contract_policyController() {
    }

    private static final Smart_contract_policyController obj = new Smart_contract_policyController();

    public static Smart_contract_policyController getInstance() {
        return obj;
    }

    public void Save(Smart_contract_policy data) throws Exception {
        con.getConnection();
        con.aud("INSERT INTO smart_contract_policy(policy,description) values ('" + data.getPolicy() + "','" + data.getDescription() + "') ");
    }

    public void Update(Smart_contract_policy data) throws Exception {
        con.getConnection();
        con.aud("UPDATE smart_contract_policy SET policy  = '" + data.getPolicy() + "',description  = '" + data.getDescription() + "' WHERE smart_contract_policy_id = '" + data.getSmart_contract_policy_id() + "'");
    }

    public void Delete(Smart_contract_policy data) throws Exception {
        con.getConnection();
        con.aud("DELETE FROM smart_contract_policy WHERE smart_contract_policy_id = '" + data.getSmart_contract_policy_id() + "'");
    }

    public List<Smart_contract_policy> SearchAll() throws Exception {
        List<Smart_contract_policy> objList = new ArrayList<Smart_contract_policy>();
        con.getConnection();
        ResultSet rset = con.srh("SELECT * FROM smart_contract_policy");
        while (rset.next()) {
            Smart_contract_policy obj = new Smart_contract_policy();
            obj.setSmart_contract_policy_id(rset.getInt(1));
            obj.setPolicy(rset.getString(2));
            obj.setDescription(rset.getString(3));
            objList.add(obj);
        }

        return objList;
    }

    public List<Smart_contract_policy> Search(Smart_contract_policy data) throws Exception {
        List<Smart_contract_policy> objList = new ArrayList<Smart_contract_policy>();
        con.getConnection();
        ResultSet rset = con.srh("SELECT * FROM smart_contract_policy WHERE smart_contract_policy_id = '" + data.getSmart_contract_policy_id() + "'");
        while (rset.next()) {
            Smart_contract_policy obj = new Smart_contract_policy();
            obj.setSmart_contract_policy_id(rset.getInt(1));
            obj.setPolicy(rset.getString(2));
            obj.setDescription(rset.getString(3));
            objList.add(obj);
        }

        return objList;
    }

    public List<String> getKeywords() throws Exception {
        List<String> list = new ArrayList<>();
        List<Smart_contract_policy> objList = new ArrayList<Smart_contract_policy>();
        con.getConnection();
        System.out.println("start sql 1");
        ResultSet rset = con.srh("SELECT * FROM smart_contract_policy");
        System.out.println("start sql 2");
        while (rset.next()) {
            System.out.println("start sql 3");
            Smart_contract_policy obj = new Smart_contract_policy();
            obj.setSmart_contract_policy_id(rset.getInt(1));
            obj.setPolicy(rset.getString(2));
            obj.setDescription(rset.getString(3));
            objList.add(obj);
        }

        System.out.println("start sql 4");
        for (int i = 0; i < objList.size(); i++) {
            System.out.println("start sql 5");
            String result = "";
            ResultSet rs = con.srh("SELECT * FROM smart_contract WHERE policy_id = '" + objList.get(i).getSmart_contract_policy_id() + "'");
            System.out.println("start sql 6");
            while (rs.next()) {
                System.out.println("start sql 7");
                result = result + rs.getString(3) + ",";
                System.out.println("start sql 8");
            }
            System.out.println("start sql 9");
            list.add(result);
            System.out.println("start sql 10");
        }

        return list;
    }

}
