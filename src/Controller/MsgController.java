//Generated by 24HRS
package Controller;

import Model.Msg;
import DataBaseConnector.Connector;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

public class MsgController {

    Connector con = Connector.getInstance();

    private MsgController() {
    }

    private static final MsgController obj = new MsgController();

    public static MsgController getInstance() {
        return obj;
    }

    public void Save(Msg data) throws Exception {
        con.getConnection();
        con.aud("INSERT INTO msg(hash,previousHash,timeStamp,sender_id,recever_id,content) values ('" + data.getHash() + "','" + data.getPreviousHash() + "','" + data.getTimeStamp() + "','" + data.getSender_id() + "','" + data.getRecever_id() + "','" + data.getContent() + "') ");
    }

    public void Update(int id ,String data) throws Exception {
        con.getConnection();
        con.aud("UPDATE msg SET content  = '" + data + "' WHERE id = '" + id + "'");
    }

    public void Delete(Msg data) throws Exception {
        con.getConnection();
        con.aud("DELETE FROM msg WHERE id = '" + data.getId() + "'");
    }

    public List<Msg> SearchAll() throws Exception {
        List<Msg> objList = new ArrayList<Msg>();
        con.getConnection();
        ResultSet rset = con.srh("SELECT * FROM msg");
        while (rset.next()) {
            Msg obj = new Msg();
            obj.setId(rset.getInt(1));
            obj.setHash(rset.getString(2));
            obj.setPreviousHash(rset.getString(3));
            obj.setTimeStamp(rset.getString(4));
            obj.setSender_id(rset.getInt(5));
            obj.setRecever_id(rset.getInt(6));
            obj.setContent(rset.getString(7));
            objList.add(obj);
        }

        return objList;
    }

    public List<Msg> Search(Msg data) throws Exception {
        List<Msg> objList = new ArrayList<Msg>();
        con.getConnection();
        ResultSet rset = con.srh("SELECT * FROM msg WHERE id = '" + data.getId() + "'");
        while (rset.next()) {
            Msg obj = new Msg();
            obj.setId(rset.getInt(1));
            obj.setHash(rset.getString(2));
            obj.setPreviousHash(rset.getString(3));
            obj.setTimeStamp(rset.getString(4));
            obj.setSender_id(rset.getInt(5));
            obj.setRecever_id(rset.getInt(6));
            obj.setContent(rset.getString(7));
            objList.add(obj);
        }

        return objList;
    }

    public List<Msg> Search(int id1, int id2) throws Exception {
        List<Msg> objList = new ArrayList<Msg>();
        con.getConnection();
        ResultSet rset = con.srh("SELECT * FROM msg WHERE sender_id = '" + id1 + "' AND recever_id = '" + id2 + "' OR sender_id = '" + id2 + "' AND recever_id = '" + id1 + "'");
        while (rset.next()) {
            Msg obj = new Msg();
            obj.setId(rset.getInt(1));
            obj.setHash(rset.getString(2));
            obj.setPreviousHash(rset.getString(3));
            obj.setTimeStamp(rset.getString(4));
            obj.setSender_id(rset.getInt(5));
            obj.setRecever_id(rset.getInt(6));
            obj.setContent(rset.getString(7));
            objList.add(obj);
        }

        return objList;
    }

    public Msg getLast() throws Exception {

        con.getConnection();
        Msg obj = new Msg();
        ResultSet rset = con.srh("SELECT * FROM msg ORDER BY id DESC LIMIT 1");
        if (rset.next()) {
            obj.setId(rset.getInt(1));
            obj.setHash(rset.getString(2));
            obj.setPreviousHash(rset.getString(3));
            obj.setTimeStamp(rset.getString(4));
            obj.setSender_id(rset.getInt(5));
            obj.setRecever_id(rset.getInt(6));
            obj.setContent(rset.getString(7));
        }

        return obj;

    }

}
